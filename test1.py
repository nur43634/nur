print("Добро пожаловать в игру 'День Исмаила в МПТ'!")
имя = "Исмаил"
print(f"Сегодня главный герой игры — {имя}, студент МПТ.")

инвентарь = []

открытые_двери = set()
задания_выполнены = set()

задания = {
    1: "Найти способ попасть в МПТ.",
    2: "Сделал ли ты практическую работу по базе данных?",
    3: "Разгадай загадку в библиотеке.",
    4: "Сдай практическую работу преподавателю.",
    5: "Пройди пару по Python."
}

локации = (
    "Вход в МПТ",
    "Аудитория 203 (база данных)",
    "Библиотека",
    "Аудитория для сдачи работы",
    "Аудитория 305 (Python)"
)

def уровень_1():
    print(f"\nУровень 1: {задания[1]}")
    print(f"{имя} опаздывает на первую пару по базе данных. Но он забыл пропуск дома!")
    действия = ["позвать друга, чтобы он дал свой пропуск", "позвать педагога-организатора", "уговорить охранника"]
    print("Доступные действия: ", ', '.join(действия))
    
    while True:
        выбор = input("Что будешь делать? (1 - позвать друга, 2 - позвать педагога-организатора, 3 - уговорить охранника): ")

        if выбор == "1":
            print("\nТы позвал своего друга, и он одолжил тебе свой пропуск. Но охранники заподозрили неладное.")
            print("Охранники заметили, что пропуск не твой, и поругали тебя за нарушение правил.")
            задания_выполнены.add("пропуск")
            break
        elif выбор == "2":
            print("\nТы позвал педагога-организатора, и он помог тебе попасть внутрь.")
            print("Однако, он сказал, что это в последний раз, когда он делает тебе поблажку.")
            задания_выполнены.add("пропуск")
            break
        elif выбор == "3":
            print("\nТы подошел к охраннику и попытался его уговорить.")
            print("Но охранник был непреклонен и отказался впустить тебя без пропуска.")
            print("Придется выбрать другой вариант.")
        else:
            print("Некорректный ввод, попробуй ещё раз.")
    
    if "пропуск" in задания_выполнены:
        открытые_двери.add(локации[0])
        print(f"\nТы вошел в МПТ и направился в {локации[1]} на первую пару.")

def уровень_2():
    print(f"\nУровень 2: {задания[2]}")
    print(f"Ты сидишь в {локации[1]}, и преподаватель спрашивает:")
    print("'Исмаил, ты сделал практическую работу по базе данных?'")
    
    выбор = input("Что ты ответишь? (1 - Да, 2 - Нет, 3 - Попробовать уговорить): ")

    if выбор == "1":
        print("\nТы солгал, но преподаватель не проверил твою работу.")
        print("Ты обманул его, но теперь тебе нужно срочно найти ответы.")
        задания_выполнены.add("практическая работа")
    elif выбор == "2":
        print("\nТы честно признался, что не сделал работу.")
        print("Преподаватель дал тебе шанс выполнить её прямо сейчас.")
        задания_выполнены.add("практическая работа")
    elif выбор == "3":
        print("\nТы попытался уговорить преподавателя дать тебе время.")
        print("Преподаватель согласился, но теперь нужно срочно найти ответы.")
        задания_выполнены.add("практическая работа")
    
    if "практическая работа" in задания_выполнены:
        print(f"\nТеперь ты идешь в {локации[2]}, чтобы найти ответы в библиотеке.")

def уровень_3():
    print(f"\nУровень 3: {задания[3]}")
    print(f"Ты пришел в {локации[2]}, чтобы найти ответы на практическую работу.")
    print("Но вдруг дверь библиотеки захлопнулась, и ты обнаружил странную книгу на столе.")
    print("Открывая её, ты видишь загадку, которая, похоже, открывает секретный выход из библиотеки.")

    загадка = """
    'В одном классе 20 учеников. 
    Каждый ученик обменивается рукопожатием с каждым. 
    Сколько всего рукопожатий было?'
    """
    print(загадка)
    ответ = input("Ответ: ")

    if ответ == "190":
        print("\nПравильно! Ты решил загадку и нашел секретный выход из библиотеки.")
        задания_выполнены.add("загадка решена")
    else:
        print("\nНеправильно. Попробуй еще раз.")
        уровень_3()

def уровень_4():
    print(f"\nУровень 4: {задания[4]}")
    print(f"Теперь, когда у тебя есть ответы, пора сдать практическую работу.")
    print(f"Ты идешь в {локации[3]} к преподавателю, чтобы сдать её.")
    
    действия = ["сдать работу честно", "попробовать списать с чужой работы", "уговорить преподавателя принять работу позже"]
    print("Доступные действия: ", ', '.join(действия))

    выбор = input("Что будешь делать? (1 - сдать честно, 2 - списать, 3 - уговорить преподавателя): ")

    if выбор == "1":
        print("\nТы сдал свою практическую работу честно. Преподаватель похвалил тебя за старание.")
        задания_выполнены.add("работа сдана")
    elif выбор == "2":
        print("\nТы попытался списать работу, но преподаватель заметил и дал тебе неудовлетворительно.")
        задания_выполнены.add("работа сдана, но плохо")
    elif выбор == "3":
        print("\nТы попытался уговорить преподавателя принять работу позже, но он отказался.")
        задания_выполнены.add("работа не сдана")
    
    if "работа сдана" in задания_выполнены or "работа сдана, но плохо" in задания_выполнены:
        print(f"\nТеперь тебе нужно идти на следующую пару — {локации[4]}.")

def уровень_5():
    print(f"\nУровень 5: {задания[5]}")
    print(f"Ты пришел на пару по Python в {локации[4]}. Преподаватель задает практическую задачу.")
    
    задача = """
    Напиши программу, которая проверяет, является ли число четным.
    Например, если вводится число 4, программа должна вывести "Четное".
    Если вводится число 7, программа должна вывести "Нечетное".
    """
    print(задача)

    решение = input("Введи код программы (Python): ")

    if "if" in решение and "else" in решение:
        print("\nПреподаватель проверил твой код и похвалил за правильное решение задачи.")
    else:
        print("\nК сожалению, твой код не сработал. Преподаватель дал тебе дополнительное задание.")

    print("\nТы успешно завершил свой день в МПТ! Поздравляю!")

def начать_игру():
    print(f"\nСегодня у Исмаила важный день в МПТ. Он должен успеть на все занятия и выполнить все задания.\n")
    
    уровень_1()
    if "пропуск" in задания_выполнены:
        уровень_2()
    if "практическая работа" in задания_выполнены:
        уровень_3()
    if "загадка решена" in задания_выполнены:
        уровень_4()
    if "работа сдана" in задания_выполнены or "работа сдана, но плохо" in задания_выполнены:
        уровень_5()

начать_игру()
